{"version":3,"sources":["assets/taxi.gif","assets/game-footage.gif","assets/chatbot.png","assets/game-showcase.mp4","assets/kneel.svg","assets/logo.svg","assets/dawn.jpg","components/ProjectCarousel.js","components/Home.js","components/Projects.js","components/NaviBar.js","components/Footer.js","components/Summary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","ProjectCarousel","Carousel","className","color","Item","src","game","alt","Caption","taxi","chatbot","Home","Accordion","Toggle","as","Card","Header","eventKey","Collapse","Body","Projects","controls","autoPlay","preload","muted","showcase","type","Button","variant","href","target","Image","NaviBar","Navbar","fluid","Brand","logo","width","height","Nav","Link","Footer","jumbo","Summary","Jumbotron","Container","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2c0f92c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/taxi.dc679851.gif\";","module.exports = __webpack_public_path__ + \"static/media/game-footage.f03c7f08.gif\";","module.exports = __webpack_public_path__ + \"static/media/chatbot.8308bec6.png\";","module.exports = __webpack_public_path__ + \"static/media/game-showcase.a7e6863c.mp4\";","module.exports = __webpack_public_path__ + \"static/media/kneel.bbd4e993.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/dawn.e54cae38.jpg\";","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport game from '../assets/game-footage.gif';\r\nimport taxi from '../assets/taxi.gif';\r\nimport chatbot from '../assets/chatbot.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .carousel {\r\n        width: 75%;\r\n        height: 50%;\r\n        margin: auto;\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    .img {\r\n        width: 100%;\r\n        max-width: 640px;\r\n        height: 360px;\r\n        margin: auto;\r\n        display: block;\r\n    }\r\n\r\n    .carousel-control-prev-icon {\r\n        background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23f79a4e' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\");\r\n    }\r\n    \r\n    .carousel-control-next-icon {\r\n        background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23f79a4e' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\");\r\n    }\r\n\r\n    .carousel-indicators li {\r\n        background-color: #f79a4e;\r\n    }\r\n\r\n    .light-bg {\r\n        background-color: rgba(256,256,256,0.2)\r\n    }\r\n\r\n    .light-bg h6 {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nexport const ProjectCarousel = () => (\r\n    <Styles>\r\n        <Carousel className=\"carousel\" color=\"black\">\r\n            <Carousel.Item>\r\n                <img className=\"img\" src={game} alt=\"game-gif\" />\r\n                <Carousel.Caption className=\"light-bg\">\r\n                    <h3>Forgotten Dungeon</h3>\r\n                    <h6>3D First-Person Dungeon Shooter made with Unity</h6>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <img className=\"img\" src={taxi} alt=\"taxi-gif\" />\r\n                <Carousel.Caption className=\"light-bg\">\r\n                    <h3>OpenAI Gym Taxi-v2</h3>\r\n                    <h6>Feature-based Reinforcement Learning</h6>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <img className=\"img\" src={chatbot} alt=\"chatbot\" />\r\n                <Carousel.Caption className=\"light-bg\">\r\n                    <h3>University Chatbot</h3>\r\n                    <h6>Service ChatBot with built-in Natural Languange Processing.</h6>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n        </Carousel>\r\n    </Styles>\r\n);\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card';\r\nimport { ProjectCarousel } from './ProjectCarousel'\r\n\r\nconst Styles = styled.div`\r\n    h3 {\r\n        color: #f7be16;\r\n    }\r\n\r\n    p {\r\n        color: white;\r\n    }\r\n\r\n    .bottom {\r\n        margin-bottom: 100px;\r\n    }\r\n\r\n    .accordion {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .card-header {\r\n        color: white;\r\n        border: 1px solid white;\r\n        background-color: #0b1021;\r\n        border-collapse: collapse;\r\n        height: 50px;\r\n\r\n        &:hover {\r\n            color: #f7be16;\r\n        }\r\n    }\r\n\r\n    .card-body {\r\n        color: white;\r\n        border: 1px solid white;\r\n    }\r\n\r\n`;\r\n\r\nexport const Home = () => (\r\n    <Styles>\r\n        <ProjectCarousel />\r\n        <h3>Background</h3>\r\n        <p>I was born in the island nation of Philippines where I was raised until the age of 12.\r\n        My family then relocated here in the US. Initially we moved to New York and stayed there\r\n        for about 3 years, then finally we moved here in California to be closer to our relatives. \r\n        My parents sacrificed a lot in order to give us a better future, therefore upon graduating I am\r\n        happy to start working and begin helping them out.</p>\r\n        <p>Mathematics have always come natural to me. Therefore, I've planned to become an engineer \r\n        of some sorts in the future. Upon starting college however, I was unsure which field of engineering to\r\n        enter. I decided on Computer Science with the mindset that it is where the future technologies \r\n        is heading. To my surpise, I started to find coding enjoyable. I found that problem-solving with \r\n        clean and efficient code satisfying. Similarly, I liked seeing the lines of code eventually do what I want\r\n        it to do.</p>\r\n        <h3>Education</h3>\r\n        <p>I graduated Summa Cum Laude on May 2019 at CalState LA with a Bachelor's Degree\r\n        in Computer Science. This not only demonstrates my efforts, but also shows my desire \r\n        and capacity to learn and excell in both general and advanced courses. These courses\r\n        include industry-relevant topics in the fields of Computer Science such as: Artificial \r\n        Intelligence, Cyber Security, Full-Stack Web Development, and Game Development.</p>\r\n        <h3>Technical Skills</h3>\r\n        <Accordion className=\"bottom\">\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                <h6>Backend</h6>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                   <p>Java, Python, C#, Node JS</p>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                <h6>Frontend</h6>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body>\r\n                    <p>JavaScript ES6, HTML5, CSS, React JS</p>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                <h6>Database</h6>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n                <Card.Body>\r\n                   <p>MySQL</p>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                <h6>Utility</h6>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n                <Card.Body>\r\n                   <p>GIT, Unity</p>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Accordion>\r\n    </Styles>\r\n);\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport showcase from '../assets/game-showcase.mp4';\r\nimport taxi from '../assets/taxi.gif'\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n    h3 {\r\n        color: #f7be16;\r\n    }\r\n\r\n    .figure, .video {\r\n        width: 600px;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px; \r\n        display: block;\r\n    }\r\n\r\n    .button {\r\n        color: #f7be16;\r\n        border-color:  #f7be16;\r\n        margin-bottom: 20px;\r\n        \r\n        &:hover {\r\n            background-color:  #f7be16;\r\n            color: #172842;\r\n        }\r\n    }\r\n\r\n    .buffer {\r\n        height: 100px;\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nexport const Projects = () => (\r\n    <Styles>\r\n        <h3>Forgotten Dungeon</h3>\r\n        <video className=\"video\" controls autoPlay preload muted><source src={showcase} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n        </video>\r\n        <Button className=\"button\" \r\n            variant=\"outline-success\" \r\n            href=\"FDWebGLBuild/\" \r\n            target=\"_blank\">\r\n                Try the game!\r\n        </Button>\r\n        <h3>OpenAIGym Taxi-v2</h3>\r\n        <Image className=\"figure\" src={taxi} />\r\n        <Button className=\"button\" \r\n            variant=\"outline-success\" \r\n            href=\"https://colab.research.google.com/drive/1lr_A64-_pt-rPz2fwTpiWL8XR_c9rb-t\" \r\n            target=\"_blank\">\r\n                View and Run the code!\r\n        </Button>\r\n        <div className=\"buffer\"></div>\r\n    </Styles>\r\n);\r\n","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport logo from '../assets/kneel.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .navbar {\r\n        background-color: #0b1021;\r\n        position: fixed;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 50px;\r\n        z-index: 100;\r\n    }\r\n\r\n    .brand {\r\n        color: #f7be16 !important;\r\n    }\r\n    \r\n    .item {\r\n        color: white !important;\r\n\r\n        &:hover {\r\n            color: #f7be16 !important;\r\n        }\r\n    }\r\n\r\n    .logo {\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport const NaviBar = () => (\r\n    <Styles>\r\n        <Navbar fluid className=\"navbar\" >\r\n            <Navbar.Brand className=\"brand\" href=\"#/\">\r\n                <img className=\"logo\" src={logo} width=\"20\" height=\"20\" alt=\"logo\" />\r\n                Neil Manimtim\r\n            </Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Link className=\"item\" href=\"#/\">Home</Nav.Link>\r\n                <Nav.Link className=\"item\" href=\"#/Projects\">Projects</Nav.Link>\r\n                <Nav.Link className=\"item\" href=\"ResumeGen.pdf\" target=\"_blank\">Resume</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    </Styles>  \r\n);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst Styles = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    \r\n    .footer {\r\n        position: fixed;\r\n        bottom: 0;\r\n        height: 40px;\r\n        width: 100%;\r\n        text-align: center;\r\n        background-color: #0b1021;\r\n        color: white;\r\n        padding-top: 10px;\r\n    }\r\n\r\n    .link {\r\n        color: white;\r\n        padding-left: 5px;\r\n\r\n        &:hover {\r\n            color: #f7be16;\r\n        }\r\n    }\r\n\r\n    .logo {\r\n        width: 25px;\r\n        height: 25px;\r\n        margin-left: 20px;\r\n    }\r\n`;\r\n\r\nexport const Footer = () => (\r\n    <Styles>\r\n        <div className=\"footer\">\r\n            &copy; Neil Manimtim | \r\n            <a className=\"link\" href=\"https://github.com/nman03\">GitHub</a> |\r\n            <a className=\"link\" href=\"https://www.linkedin.com/in/neilmanimtim/\">LinkedIn</a> |\r\n            <a className=\"link\" href=\"mailto:nm31997@gmail.com\">E-Mail</a>\r\n            <img className=\"logo\" src={logo} alt=\"react-logo\"/> Powered by React\r\n        </div>\r\n    </Styles>\r\n);","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport styled from 'styled-components';\r\nimport jumbo from '../assets/dawn.jpg';\r\n\r\nconst Styles = styled.div`\r\n    .jumbo {\r\n        background: url(${jumbo}) no-repeat center;\r\n        bacground-size: cover;\r\n        color: white;\r\n        min-height: 200px;\r\n        margin-top: 50px;\r\n        margin-bottom: 50px;\r\n        padding: 10px;\r\n        z-index: -2;\r\n    }\r\n\r\n    h3 {\r\n        color:  #0b1021;\r\n    }\r\n\r\n    .text {\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport const Summary = () => (\r\n    <Styles>\r\n        <Jumbotron fluid className=\"jumbo\">\r\n            <Container className=\"text\">\r\n                <h3>Welcome</h3> \r\n                <h6>I'm a programmer who loves to learn. I have a strong \r\n                grasp of OOPs concepts, built on a strong foundation \r\n                in JAVA. Below are some of the projects I've worked on.</h6>\r\n            </Container>   \r\n        </Jumbotron>     \r\n    </Styles>    \r\n);","import React, { Fragment } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './components/Home';\nimport { Projects } from './components/Projects';\nimport { NaviBar } from './components/NaviBar';\nimport { Footer } from './components/Footer';\nimport { Summary } from './components/Summary';\nimport Containter from 'react-bootstrap/Container';\n\n\nfunction App() {\n\treturn (\n        <Fragment>\n            <NaviBar />\n            <Summary />\n            <Containter>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/Projects\" component={Projects} />\n                    </Switch>\n                </Router>\n            </Containter> \n            <Footer />\t  \n        </Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}